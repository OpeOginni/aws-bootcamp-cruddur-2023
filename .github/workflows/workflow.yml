name: Sync-Prod-Frontend

on:
  push:
    branches: [ prod ]
  pull_request:
    branches: [ prod ]

jobs:
  build:
    name: Statically Build Files
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: cd frontend-react-js && npm ci # && DISABLE_ESLINT_PLUGIN=true npm run build
  deploy:
    name: Sync Static Build to S3 Bucket
    runs-on: ubuntu-latest
    needs: [build] # WIll only run if the BULD step is successful
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # Store my access keys in my REPO SECRET
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - uses: actions/checkout@v3
      - name: Set up Ruby
        uses: ruby/setup-ruby@ec02537da5712d66d4d50a0f33b7eb52773b5ed1
        with:
          ruby-version: '3.1'
      - name: Install dependencies
        run: bundle install && gem install aws_s3_website_sync && gem install dotenv
      - name: Add ENV
        run: export THEIA_WORKSPACE_ROOT=/aws-bootcamp-cruddur-2023
      - name: Create sync.env file
        run: ./bin/frontend/generate-env
      - name: Run Static Build
        run: ./bin/frontend/static-build-prod
      - name: Sync Frontend
        run: ./bin/frontend/sync
        env:
          SYNC_S3_BUCKET: opeoginni.cloud
          SYNC_CLOUDFRONT_DISTRUBTION_ID: EQA2Z7B6R930K
          SYNC_BUILD_DIR: /frontend-react-js/build
          SYNC_OUTPUT_CHANGESET_PATH: /tmp/changeset.json
          SYNC_AUTO_APPROVE: false
